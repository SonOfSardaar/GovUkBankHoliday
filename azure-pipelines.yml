pool:
  vmImage: 'ubuntu-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- checkout: self
  persistCredentials: true

- task: GitVersion@5
  displayName: Use git version
  inputs:
    versionSpec: '5.*'
    updateAssemblyInfo: false

- pwsh: |
    $version = "$(Build.BuildNumber)" -replace "\+", "."
    Write-Host "##vso[build.updatebuildnumber]$version"
  displayName: Clean Build Number

- task: NuGetToolInstaller@1
  displayName: Install nuget tool

- task: UseDotNet@2
  displayName: Use dotnet sdk 8.x
  inputs:
    packageType: 'sdk'
    version: '8.x'
   
- task: DotNetCoreCLI@2
  displayName: Build solution
  inputs:
    command: build
    configuration: Release
    buildProperties: Version=$(Build.BuildNumber)
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Run Tests
  inputs:
    command: test
    arguments: --no-build -f net8.0      
    configuration: Release
    projects: '**/*Tests.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byBuildNumber'

- ${{if eq(variables['Build.SourceBranchName'], 'main')}}:
  - task: DotNetCoreCLI@2
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: 'external'
      publishFeedCredentials: 'Nuget Org'

  - pwsh: |
      $userEmail="$(Build.RequestedForEmail)"
      $userName="$(Build.RequestedFor)"
      $tag="$(Build.BuildNumber)"

      git config --global user.email "$userEmail"
      git config --global user.name "$userName"

      $timeStamp = Get-Date -Format "dd MMM yyyy HH:mm"
      $tagMessage = "Released: $timeStamp"
            
      git tag -a $tag -m $tagMessage
      git push origin $tag --force
      Write-Host "Annotated tag '$tag [$tagMessage]' pushed to remote/origin"
    displayName: GIT Tag Release